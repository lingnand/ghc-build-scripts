#!/bin/bash
set -e
# set -x

help_text() {
    echo "Usage:
  ${0##*/} [-h] --host=... --prefix=... [--version=X.Y] [target1 target2 target3]

  where targetN is e.g. aarch64-linux-android. If no targets are given
  will build for aarch64-linux-android and arm-linux-androideabi.

Options:

  -h, --help
    display this help and exit

  --host=<host>
    the build host (e.g. darwin-x86_64)

  --prefix=<prefix>
    the prefix to pass to configure

  --version=<version>
    the libiconv version to build. Defaults to 1.15"
}

version=1.15

while [ "$#" -gt 0 ]; do
    case "$1" in
        --prefix=*) prefix="${1#*=}"; shift 1;;
        --host=*) host="${1#*=}"; shift 1;;
        --version=*) version="${1#*=}"; shift 1;;
        -h|--help) help_text; exit;;
        -*) echo "unknown option: $1" >&2; exit 1;;
        *) args+="$1"; shift 1;;
    esac
done

if [ -z $host ]; then
    echo "no --host given" >&2
    exit 1
fi
if [ -z $prefix ]; then
    echo "no --prefix given" >&2
    exit 1
fi


TARGETS=${args:-"aarch64-linux-android armv7a-linux-androideabi"}


if [ ! -f libiconv-$version.tar.gz ]; then
    curl -O -L https://ftp.gnu.org/pub/gnu/libiconv/libiconv-$version.tar.gz
fi
tar xzf libiconv-$version.tar.gz
cd libiconv-$version
for target in $TARGETS; do
    ANDROID_HOST=$target
    # assuming toolchain-wrapper is setup and in PATH
    export CPP="$ANDROID_HOST-clang -E"
    export CC="$ANDROID_HOST-clang"
    export LD="$ANDROID_HOST-ld"
    export AR="$ANDROID_HOST-ar"
    export RANLIB="$ANDROID_HOST-ranlib"
    if [ -f Makefile ]; then
        echo "Cleaning up build folder..."
        make clean --silent
    fi
    echo "Configuring $target..."
    ./configure --prefix=$prefix/$target --host=$ANDROID_HOST \
                --silent \
                --enable-shared=no --enable-static=yes
    echo "Building $target"
    make -j --silent
    echo "Installing $target..."
    make --silent install
done
